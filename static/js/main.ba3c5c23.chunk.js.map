{"version":3,"sources":["components/PostsList/PostsList.jsx","components/Loader/Loader.jsx","components/NewCommentForm/NewCommentForm.jsx","api/api.js","api/posts.js","api/comments.js","components/PostDetails/PostDetails.jsx","App.jsx","index.js"],"names":["PostsList","posts","getPostId","selectedPostId","className","map","post","key","id","userId","title","type","onClick","Loader","NewCommentForm","addComment","useState","name","setName","email","setEmail","body","setBody","onSubmit","event","preventDefault","onSubmitForm","placeholder","value","onChange","e","target","trim","required","BASE_URL","request","path","a","fetch","response","result","json","getPostDetails","postId","getPostComments","addPostComment","data","method","JSON","stringify","deletePostComment","PostDetails","setPost","comments","setComments","hiddenComments","setHiddenComments","useEffect","postInfo","api","commentsInfo","fetchAllData","deleteComment","commentId","newComments","length","hidden","comment","App","setPosts","userValue","setUserValue","setSelectedPostId","fetchData","Number","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ba3c5c23.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './PostsList.scss';\n\nexport const PostsList = ({ posts, getPostId, selectedPostId }) => (\n  <div className=\"PostsList\">\n    <h2>Posts:</h2>\n\n    <ul className=\"PostsList__list\">\n      {posts.map(post => (\n        <li key={post.id} className=\"PostsList__item\">\n\n          <div>\n            <b>\n              [User #\n              {post.userId}\n              ]:\n              {' '}\n            </b>\n            {post.title}\n          </div>\n\n          <button\n            type=\"button\"\n            className=\"PostsList__button button\"\n            onClick={() => getPostId(post.id)}\n          >\n            {selectedPostId === post.id ? 'Close' : 'Open' }\n          </button>\n\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n\nPostsList.propTypes = {\n  posts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      userId: PropTypes.number,\n      title: PropTypes.string,\n    }).isRequired,\n  ).isRequired,\n  getPostId: PropTypes.func.isRequired,\n  selectedPostId: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport './NewCommentForm.scss';\n\nexport const NewCommentForm = ({ addComment }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [body, setBody] = useState('');\n\n  const onSubmitForm = (event) => {\n    event.preventDefault();\n\n    addComment({\n      name, email, body,\n    });\n\n    setName('');\n    setEmail('');\n    setBody('');\n  };\n\n  return (\n    <form\n      className=\"NewCommentForm\"\n      onSubmit={event => onSubmitForm(event)}\n    >\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          value={name}\n          onChange={e => setName((e.target.value).trim())}\n          required\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          value={email}\n          onChange={e => setEmail((e.target.value).trim())}\n          required\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          value={body}\n          onChange={e => setBody((e.target.value).trim())}\n          required\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n\nNewCommentForm.propTypes = {\n  addComment: PropTypes.func.isRequired,\n};\n","export const BASE_URL = 'https://mate-api.herokuapp.com';\n","import { BASE_URL } from './api';\n\nexport const request = async(path) => {\n  const response = await fetch(`${BASE_URL}${path}`);\n  const result = response.json();\n\n  return result;\n};\n\nexport const getAllPosts = () => request(`/posts`);\n\nexport const getUserPosts = userId => request(`/posts?userId=${userId}`);\n\nexport const getPostDetails = postId => request(`/posts/${postId}`);\n","import { request } from './posts';\nimport { BASE_URL } from './api';\n\nexport const getPostComments = postId => request(`/comments?postId=${postId}`);\n\nexport const addPostComment = async(data) => {\n  const response = await fetch(`${BASE_URL}/comments`, {\n    method: 'POST',\n    body: JSON.stringify(data),\n  });\n  const result = await response.json();\n\n  return result.data;\n};\n\nexport const deletePostComment = async(postId) => {\n  const response = await fetch(`${BASE_URL}/comments/${postId}`, {\n    method: 'DELETE',\n  });\n  const result = await response.json();\n\n  return result.data;\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport './PostDetails.scss';\nimport { Loader } from '../Loader';\nimport { NewCommentForm } from '../NewCommentForm';\nimport { getPostDetails } from '../../api/posts';\nimport * as api from '../../api/comments';\n\nexport const PostDetails = ({ postId }) => {\n  const [post, setPost] = useState(null);\n  const [comments, setComments] = useState(null);\n  const [hiddenComments, setHiddenComments] = useState(false);\n\n  useEffect(() => {\n    const fetchAllData = async() => {\n      const postInfo = await getPostDetails(postId);\n      const commentsInfo = await api.getPostComments(postId);\n\n      setPost(postInfo.data);\n      setComments(commentsInfo.data);\n    };\n\n    fetchAllData();\n  }, [postId]);\n\n  const deleteComment = async(commentId) => {\n    await api.deletePostComment(commentId);\n    const newComments = await api.getPostComments(postId);\n\n    setComments(newComments.data);\n  };\n\n  const addComment = async({ name, email, body }) => {\n    await api.addPostComment({\n      postId, name, email, body,\n    });\n    const newComments = await api.getPostComments(postId);\n\n    setComments(newComments.data);\n  };\n\n  if (postId && !post) {\n    return <Loader />;\n  }\n\n  return (\n    <>\n      {post\n        && (\n          <div className=\"PostDetails\">\n            <h2>Post details:</h2>\n\n            <section className=\"PostDetails__post\">\n              <p>{post.body}</p>\n            </section>\n\n            {comments && comments.length > 0\n              ? (\n                <section className=\"PostDetails__comments\">\n                  <button\n                    type=\"button\"\n                    className=\"button\"\n                    onClick={() => setHiddenComments(!hiddenComments)}\n                  >\n                    {!hiddenComments\n                      ? `Hide ${comments.length} comments`\n                      : `Show ${comments.length} comments`\n                    }\n                  </button>\n\n                  <ul\n                    className=\"PostDetails__list\"\n                    hidden={hiddenComments}\n                  >\n                    {comments.map(comment => (\n                      <li\n                        key={comment.id}\n                        className=\"PostDetails__list-item\"\n                      >\n                        <button\n                          type=\"button\"\n                          className=\"PostDetails__remove-button button\"\n                          onClick={() => deleteComment(comment.id)}\n                        >\n                          X\n                        </button>\n                        <p>{comment.body}</p>\n                      </li>\n                    ))\n                    }\n                  </ul>\n                </section>\n              )\n              : (\n                <p className=\"PostDetails__empty-message\">\n                  There is no comments yet, you could be first !!!\n                </p>\n              )\n            }\n\n            <section>\n              <div className=\"PostDetails__form-wrapper\">\n                <NewCommentForm addComment={addComment} />\n              </div>\n            </section>\n          </div>\n        )\n      }\n    </>\n  );\n};\n\nPostDetails.propTypes = {\n  postId: PropTypes.number.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { getAllPosts, getUserPosts } from './api/posts';\n\nconst App = () => {\n  const [posts, setPosts] = useState([]);\n  const [userValue, setUserValue] = useState(0);\n  const [selectedPostId, setSelectedPostId] = useState(0);\n\n  const getPostId = (postId) => {\n    (selectedPostId !== postId)\n      ? setSelectedPostId(postId)\n      : setSelectedPostId(0);\n  };\n\n  useEffect(() => {\n    const fetchData = async() => {\n      let request;\n\n      (userValue)\n        ? request = await getUserPosts(userValue)\n        : request = await getAllPosts();\n\n      setPosts(request.data);\n    };\n\n    fetchData();\n  }, [userValue]);\n\n  const onSelectChange = (e) => {\n    setUserValue(Number(e.target.value));\n    setSelectedPostId(0);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n\n          <select className=\"App__user-selector\" onChange={onSelectChange}>\n            <option value=\"0\">All users</option>\n            <option value=\"1\">Leanne Graham</option>\n            <option value=\"2\">Ervin Howell</option>\n            <option value=\"3\">Clementine Bauch</option>\n            <option value=\"4\">Patricia Lebsack</option>\n            <option value=\"5\">Chelsey Dietrich</option>\n            <option value=\"6\">Mrs. Dennis Schulist</option>\n            <option value=\"7\">Kurtis Weissnat</option>\n            <option value=\"8\">Nicholas Runolfsdottir V</option>\n            <option value=\"9\">Glenna Reichert</option>\n            <option value=\"10\">Leanne Graham</option>\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            posts={posts}\n            getPostId={getPostId}\n            selectedPostId={selectedPostId}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <PostDetails postId={selectedPostId} />\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}